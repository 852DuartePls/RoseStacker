import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'maven-publish'
    id 'java'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'dev.esophose'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()

    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://repo.codemc.org/repository/maven-public' }
    maven { url = 'https://repo.codemc.org/repository/nms' }
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url = 'http://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = 'http://maven.playpro.com' }
}

compileJava {
    options.compilerArgs += ['-parameters']
    options.fork = true
    options.forkOptions.executable = 'javac'
    options.encoding = 'UTF-8'
}

dependencies {
    // Referenced dependencies
    shadow 'org.spigotmc:spigot:1.15.2-R0.1-20200202.085145-8'
    shadow 'me.clip:placeholderapi:2.10.4'
    shadow 'net.coreprotect:coreprotect:2.15.0'

    /*
     * Referenced local dependencies that aren't available in a maven repo
     * Included local dependencies:
     * - CMI8.6.9.4.jar
     * - Holograms-2.12.jar
     * - HolographicDisplays-2.4.2-SNAPSHOT.jar
     * - ShopGUIPlus-1.25.1.jar
     * - StackMob-5.0.2.jar
     * - ultimatestacker-1.11.6.jar
     * - WildStacker-3.0.1.jar
     */
    shadow fileTree(dir: 'libs', include: ['*.jar'])

    // Dependencies that will be shaded into the jar
    implementation 'co.aikar:acf-paper:0.5.0-SNAPSHOT'
    implementation 'com.zaxxer:HikariCP:3.2.0'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:slf4j-nop:1.7.25'
}

shadowJar {
    archiveClassifier.set(null)

    relocate('com.zaxxer.hikari', 'dev.esophose.sparkstacker.lib.hikaricp')
    relocate('org.slf4j', 'dev.esophose.sparkstacker.lib.slf4j')
    relocate('co.aikar.commands', 'dev.esophose.sparkstacker.lib.acf')

    exclude 'acf-*.properties'
}

processResources {
    from (sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
        mavenJava(MavenPublication) {
            artifactId = 'sparkstacker'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'sparkstacker'
            }
        }
    }
    repositories {
        if (project.hasProperty('mavenUsername') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUsername
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.codemc.org/repository/maven-releases/'
                def snapshotsRepoUrl = 'https://repo.codemc.org/repository/maven-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

build.dependsOn shadowJar
